---
import Layout from "@/layouts/Layout.astro";
import Container from "@/components/Container.astro";
import { SITE, HOME } from "@/consts";
import Link from "@/components/Link.astro";
import { Auth } from "auth-astro/components";
import { type Session } from "@auth/core/types";
import { getSession } from "auth-astro/server";
import { isValidEmail } from "@/lib/utils";


const hostEmail = (await getSession(Astro.request))?.user?.email

const errors = {
  guestEmail1: "",
  guestEmail2: "",
  guestEmail3: ""
}

const dupErrors = {
  guestEmail1: "",
  guestEmail2: "",
  guestEmail3: ""
}

if (hostEmail !== undefined && hostEmail !== null && Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData()
    const guestEmail1 = data.get("guest1")
    const guestEmail2 = data.get("guest2")
    const guestEmail3 = data.get("guest3")
    

    if (typeof guestEmail1 !== 'string' || isValidEmail(guestEmail1)) {
      errors.guestEmail1 = "Please enter the valid email address of guest 1"
    } else {
      errors.guestEmail1 = ""
    }

    if (typeof guestEmail2 !== 'string' || guestEmail2.length < 1) {
      errors.guestEmail2 = "Please enter the email address of guest 1"
    } else {
      errors.guestEmail2 = ""
    }
    
    if (typeof guestEmail3 !== 'string' || guestEmail3.length < 1) {
      errors.guestEmail3 = "Please enter the email address of guest 1"
    } else {
      errors.guestEmail3 = ""
    }

    const duplicated = {
      "1-2": guestEmail1 === guestEmail2,
      "2-3": guestEmail2 === guestEmail3,
      "1-3": guestEmail1 === guestEmail3
    }
    const all_same = duplicated["1-2"] && duplicated["1-3"] && duplicated["2-3"]
    if(all_same) {
      dupErrors.guestEmail1 = dupErrors.guestEmail2 = dupErrors.guestEmail3 = "All guest emails should be different to each other"
    } else if(duplicated["1-2"]) {
      dupErrors.guestEmail1 = dupErrors.guestEmail2 = "Same email address: Guest 1 and 2"
    } else if(duplicated["1-3"]) {
      dupErrors.guestEmail1 = dupErrors.guestEmail3 = "Same email address: Guest 1 and 3"
    } else if(duplicated["2-3"]) {
      dupErrors.guestEmail1 = dupErrors.guestEmail3 = "Same email address: Guest 2 and 3"
    } else {
      dupErrors.guestEmail1 = dupErrors.guestEmail2 = dupErrors.guestEmail3 = ""
    }
    const hasErrors = Object.values(errors).some(msg => msg.length > 0)
    const hasDupErrors = Object.values(dupErrors).some(msg => msg.length > 0)
    if((!hasErrors) && (!hasDupErrors)) {
      const response = await fetch("/gameapi/create",
        {
          method: "POST",
          headers: {'Content-Type':'application/json'},
          body: JSON.stringify([
            hostEmail,
            guestEmail1,
            guestEmail2,
            guestEmail3
          ])
        }
      )
      const newGameId = (await response.json()).newGameId
      return Astro.redirect(`/game/${newGameId}/`)
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}





---

<Layout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    {/* <h1 class="animate font-semibold text-black dark:text-white">
      Introducing 
    </h1> */}
    <div class="space-y-16">
      <section class="animate space-y-6">
        <div class="flex flex-wrap items-center justify-between gap-y-2">
          <Auth>
            {(session: Session) => (
                session && session.user && session.user.email ? <div>
                    <form method="POST">
                        <label>Host: {session.user.email}</label>
                        <br/>
                        <label>Guest 1: <input type="email" name="guest1" required/></label>
                        <br/>
                        <label>Guest 2: <input type="email" name="guest2" required/></label>
                        <br/>
                        <label>Guest 3: <input type="email" name="guest3" required/></label>
                        <br/>
                        <button>Create session</button>
                    </form>
                </div> : <div>
                    You have to login before creating a new session.
                </div>
            )}
          </Auth>
        </div>
      </section>
    </div>
  </Container>
</Layout>
